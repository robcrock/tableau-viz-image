import { TableauEvent } from '../Shared/EventInterfaces';
import { Filter } from '../Shared/FilterInterfaces';
import { MarksCollection } from '../Shared/SelectionInterfaces';
import { Sheet, Worksheet } from './SheetInterfaces';
/**
 * An event which is related to a particular Worksheet in the workbook.
 */
export interface TableauWorksheetEvent extends TableauSheetEvent {
    /**
     * @returns  The worksheet which was the source of this event.
     */
    readonly worksheet: Worksheet;
}
/**
 * An event which is raised when marks are selected on a worksheet.
 */
export interface MarksSelectedEvent extends TableauWorksheetEvent {
    /**
     * @returns  The collection of Marks that were selected.
     */
    getMarksAsync(): Promise<MarksCollection>;
}
/**
 * An event which is related to a particular Sheet (worksheet, dashboard, story) in the workbook.
 */
export interface TableauSheetEvent extends TableauEvent {
    /**
     * @returns  The sheet which was the source of this event.
     */
    readonly sheet: Sheet;
}
export interface FilterChangedEvent extends TableauWorksheetEvent {
    /**
     * @returns  The name of the field being filtered.
     */
    readonly fieldName: string;
    /**
     * @returns  The Filter object associated with the event.
     */
    getFilterAsync(): Promise<Filter>;
}
